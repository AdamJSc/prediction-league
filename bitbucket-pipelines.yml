pipelines:

  tags:

    v*.*.*:
      - step:
          name: Run Go tests
          image: golang:1.18
          caches:
            - gomodules
          services:
            - docker
          script:
            # setup and configure mysql container
            - "docker run -d --name=test-db  -e MYSQL_ALLOW_EMPTY_PASSWORD=\"yeah sure\" \
                  -e MYSQL_USER=test-db-user -e MYSQL_PASSWORD=test-db-pwd  -e MYSQL_DATABASE=test-db-name \
                  -p 3306:3306 mysql:5.7"
            - docker cp ${BITBUCKET_CLONE_DIR}/docker/db/mysql-override.cnf test-db:/etc/mysql/mysql.conf.d/mysql-override.cnf
            - docker exec test-db chmod 0444 /etc/mysql/mysql.conf.d/mysql-override.cnf
            - docker restart test-db

            # run go tests
            - export MYSQL_URL="test-db-user:test-db-pwd@tcp(localhost:3306)/test-db-name?parseTime=true"
            - go mod vendor
            - go test -p 1 ./...
      - step:
          name: Run Node build
          image: node:13.10
          caches:
            - node
          script:
            - npm install
            - npm run prod
          artifacts:
            - resources/dist/**
      - step:
          name: Run Docker Image build
          image: atlassian/default-image:2
          caches:
            - gomodules
          services:
            - docker
          script:
            - BUILD_VERSION=${BITBUCKET_TAG}
            - BUILD_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
            - echo "BUILD_VERSION=${BUILD_VERSION} BUILD_TIMESTAMP=${BUILD_TIMESTAMP}"
            - docker image build --rm --build-arg BUILD_VERSION=${BUILD_VERSION} --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" --tag prediction-league-app:${BUILD_VERSION} -f ${PWD}/docker/app.Dockerfile .
            - docker tag prediction-league-app:${BUILD_VERSION} adamjsc/prediction-league-app:${BUILD_VERSION}
            - docker tag prediction-league-app:${BUILD_VERSION} adamjsc/prediction-league-app:latest
            - echo ${DOCKER_ACCESS_TOKEN} | docker login --username adamjsc --password-stdin
            - docker push adamjsc/prediction-league-app:${BUILD_VERSION}
            - docker push adamjsc/prediction-league-app:latest
      - step:
          name: Deploy
          image: atlassian/default-image:2
          script:
            - PL_APP_TAG=${BITBUCKET_TAG}
            - ssh ${PROD_SSH_USER}@${PROD_SSH_HOST} '/bin/sh -s' < release.sh ${PROD_HOST_DIR} ${PL_APP_TAG}

  custom:

    build-with-tag:
      - variables:
          - name: BuildTag
      - step:
          name: Frontend Build
          image: node:13.10
          script:
            - npm install
            - npm run prod
          artifacts:
            - resources/dist/**
      - step:
          name: Build with Tag
          image: atlassian/default-image:2
          services:
            - docker
          script:
            - BUILD_VERSION=${BuildTag}
            - BUILD_TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
            - echo "BUILD_VERSION=${BUILD_VERSION} BUILD_TIMESTAMP=${BUILD_TIMESTAMP}"
            - docker image build --rm --build-arg BUILD_VERSION=${BUILD_VERSION} --build-arg BUILD_TIMESTAMP="${BUILD_TIMESTAMP}" --tag prediction-league-app:${BUILD_VERSION} -f ${PWD}/docker/app.Dockerfile .
            - docker tag prediction-league-app:${BUILD_VERSION} adamjsc/prediction-league-app:${BUILD_VERSION}
            - echo ${DOCKER_ACCESS_TOKEN} | docker login --username adamjsc --password-stdin
            - docker push adamjsc/prediction-league-app:${BUILD_VERSION}

    release-with-tag:
      - variables:
          - name: BuildTag
      - step:
          name: Release with Tag
          image: atlassian/default-image:2
          script:
            - PL_APP_TAG=${BuildTag}
            - ssh ${PROD_SSH_USER}@${PROD_SSH_HOST} '/bin/sh -s' < release.sh ${PROD_HOST_DIR} ${PL_APP_TAG}

definitions:
  caches:
    gomodules: vendor
