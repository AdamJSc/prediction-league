pipelines:

  tags:

    v*.*.*:
      - step:
          name: Run Go tests
          image: golang:1.14
          caches:
            - gomodules
          services:
            - docker
            - test-db
          script:
            # amend mysql container config
            - export SQL_MODE="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
            - docker exec -i test-db mysql -u root -e "SET @@GLOBAL.sql_mode=\"${SQL_MODE}\";" test-db-name

            - export MYSQL_URL="test-db-user:test-db-pwd@tcp(localhost:3306)/test-db-name?parseTime=true"
            - go mod vendor
            - go test -v ./...
      - step:
          name: Run Node build
          image: node:13.10
          script:
            - npm install
            - npm run prod
          artifacts:
            - resources/dist/**
      - step:
          name: Run Docker Image build
          image: atlassian/default-image:2
          caches:
            - gomodules
          services:
            - docker
          script:
            - docker image build --rm --tag prediction-league-app:${BITBUCKET_TAG} -f ${PWD}/docker/app.Dockerfile .
            - docker tag prediction-league-app:${BITBUCKET_TAG} adamjsc/prediction-league-app:${BITBUCKET_TAG}
            - docker tag prediction-league-app:${BITBUCKET_TAG} adamjsc/prediction-league-app:latest
            - echo ${DOCKER_ACCESS_TOKEN} | docker login --username adamjsc --password-stdin
            - docker push adamjsc/prediction-league-app:${BITBUCKET_TAG}
            - docker push adamjsc/prediction-league-app:latest
      - step:
          name: Deploy
          image: atlassian/default-image:2
          script:
            - ssh ${PROD_SSH_USER}@${PROD_SSH_HOST} '/bin/sh -s' < release.sh ${PROD_HOST_DIR} ${BITBUCKET_TAG}

  custom:

    build-with-tag:
      - variables:
          - name: BuildTag
      - step:
          name: Frontend Build
          image: node:13.10
          script:
            - npm install
            - npm run prod
          artifacts:
            - resources/dist/**
      - step:
          name: Build with Tag
          image: atlassian/default-image:2
          services:
            - docker
          script:
            - docker image build --rm --tag prediction-league-app:${BuildTag} -f ${PWD}/docker/app.Dockerfile .
            - docker tag prediction-league-app:${BuildTag} adamjsc/prediction-league-app:${BuildTag}
            - echo ${DOCKER_ACCESS_TOKEN} | docker login --username adamjsc --password-stdin
            - docker push adamjsc/prediction-league-app:${BuildTag}

    release-with-tag:
      - variables:
          - name: BuildTag
      - step:
          name: Release with Tag
          image: atlassian/default-image:2
          script:
            - ssh ${PROD_SSH_USER}@${PROD_SSH_HOST} '/bin/sh -s' < release.sh ${PROD_HOST_DIR} ${BuildTag}

definitions:
  caches:
    gomodules: vendor
  services:
    test-db:
      image: mysql:5.7
      variables:
        MYSQL_USER: test-db-user
        MYSQL_PASSWORD: test-db-pwd
        MYSQL_DATABASE: test-db-name
        MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
